# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        shell: pwsh
        run: |
          $headers = @{}
          $headers.Add("AccessKey","aJYuHM3RRcDfJRKe")
          $runScheduleId = "d41f169d-88d5-442e-b8ba-9afe9dc01c3a"
          $runNow = Invoke-WebRequest -Method PUT -ContentType "application/json" -Headers $headers "http:\\vmctrl01.westeurope.cloudapp.azure.com:9001/api/v3/schedules/$runScheduleId/runNow?TEST_VALUE='ABC'"
          Write-Host "Result: " $runNow
          if ($runNow.StatusCode -ne 200) { throw "Could not run schedule." }
          $runNowResponse=$runNow.Content | ConvertFrom-Json
          $runId=$runNowResponse.RunId
          # Get the result, keep polling every 5 seconds until a new result is returned.
          do
          {
            Start-Sleep -Seconds 5
            Write-Host "Polling for run results. Runid=" $runId
            $runResult = Invoke-WebRequest -ContentType "application/json" -Headers $headers "http://automssql001.westeurope.cloudapp.azure.com:9001/api/v3/run/$runId" | ConvertFrom-Json
          } 
          while ($runResult.Status -ne 'Finished')
          Write-Host "Results received."
          #Invoke-WebRequest -ContentType "application/json" -Headers $headers "http://automssql001.westeurope.cloudapp.azure.com:9001/api/v4/variables/c012e4ff-7c98-4dd1-91c2-ed403060ba78" | ConvertFrom-Json 
          Write-Host "Run Result:" $runResult
